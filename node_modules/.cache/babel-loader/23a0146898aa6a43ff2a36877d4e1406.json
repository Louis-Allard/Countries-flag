{"ast":null,"code":"var _jsxFileName = \"/home/phenx/Desktop/Dev/tuto_react/Countries-flag/src/components/Countries.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [sortedData, setSortedData] = useState([]);\n  const [playOnce, setPlayOnce] = useState(true);\n  const [rangeValue, setRangeValue] = useState(40);\n  const [selectedRadio, SetSelectedRadio] = useState('');\n  const radios = ['Africa', 'America', 'Asia', 'Europe', 'Oceania'];\n  useEffect(() => {\n    if (playOnce) {\n      axios.get('https://restcountries.eu/rest/v2/all?fields=name;population;region;capital;flag').then(res => {\n        setData(res.data);\n        setPlayOnce(false);\n      });\n    }\n\n    const sortedCountry = () => {\n      const countryObj = Object.keys(data).map(i => data[i]);\n      const sortedArray = countryObj.sort((a, b) => {\n        return b.population - a.population;\n      });\n      sortedArray.length = rangeValue;\n      setSortedData(sortedArray);\n    };\n\n    sortedCountry();\n  }, [data, rangeValue, playOnce]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countries\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"250\",\n        value: rangeValue,\n        onChange: e => {\n          setRangeValue(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: radios.map(radio => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: radio,\n              id: radio,\n              checked: radio === selectedRadio,\n              onChange: e => {\n                SetSelectedRadio(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: radio,\n              children: radio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 28\n            }, this)]\n          }, radio, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cancel\",\n      children: selectedRadio && /*#__PURE__*/_jsxDEV(\"h5\", {\n        onClick: () => SetSelectedRadio(\"\"),\n        children: \"Annuler la recherche\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"countries-list\",\n      children: sortedData.filter(country => country.region.includes(selectedRadio)).map(country => /*#__PURE__*/_jsxDEV(Card, {\n        country: country\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Countries, \"rU7AK9Si19FyQH+SGE9oGLCruPM=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["/home/phenx/Desktop/Dev/tuto_react/Countries-flag/src/components/Countries.js"],"names":["React","useEffect","useState","axios","Card","Countries","data","setData","sortedData","setSortedData","playOnce","setPlayOnce","rangeValue","setRangeValue","selectedRadio","SetSelectedRadio","radios","get","then","res","sortedCountry","countryObj","Object","keys","map","i","sortedArray","sort","a","b","population","length","e","target","value","radio","filter","country","region","includes","name"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport Card from \"./Card\";\n\nconst Countries = () => {\nconst [data, setData] = useState([]);\nconst [sortedData, setSortedData]= useState([]);\nconst [playOnce, setPlayOnce] = useState(true);\nconst [rangeValue, setRangeValue] = useState(40);\nconst [selectedRadio, SetSelectedRadio] = useState('');\nconst radios = ['Africa', 'America', 'Asia', 'Europe', 'Oceania'];\n\nuseEffect(() => {\n    if(playOnce) {\n    axios.get('https://restcountries.eu/rest/v2/all?fields=name;population;region;capital;flag').then((res) => {\n    setData(res.data);\n    setPlayOnce(false);\n    });\n    }\nconst sortedCountry = ()=> {\n    const countryObj = Object.keys(data).map((i) => data[i])\n    const sortedArray = countryObj.sort((a,b) => {\n        return b.population - a.population\n    });\n    sortedArray.length = rangeValue;\nsetSortedData(sortedArray)\n};\nsortedCountry();\n},[data, rangeValue, playOnce]) \n\n    return(\n        <div className=\"countries\">\n            <div className=\"sort-container\">\n            <input type=\"range\" min=\"1\" max=\"250\" value={rangeValue} onChange={(e) => {setRangeValue(e.target.value);}}  />\n            <ul>\n               {radios.map((radio) => {\n                   return(\n                       <li key={radio}>\n                           <input type=\"radio\" value={radio} id={radio} checked={radio === selectedRadio} onChange={(e) => {SetSelectedRadio(e.target.value)}}/>\n                           <label htmlFor={radio}>{radio}</label>\n                       </li>\n                   );\n               })}\n            </ul>\n            </div>\n            <div className=\"cancel\">\n                {selectedRadio && <h5 onClick={()=> SetSelectedRadio(\"\")}>Annuler la recherche</h5>}\n            </div>\n            <ul className=\"countries-list\">\n                {sortedData\n                .filter((country) => country.region.includes(selectedRadio))\n                .map((country) => (\n                    <Card country={country} key={country.name} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Countries;"]},"metadata":{},"sourceType":"module"}